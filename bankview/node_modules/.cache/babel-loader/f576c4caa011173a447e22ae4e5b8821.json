{"ast":null,"code":"var _jsxFileName = \"/home/zapi/pruebaReact/bankview/src/UserSelector.js\";\nimport React, { Component } from 'react';\nimport { Select } from 'semantic-ui-react';\n\nclass UserSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.changeWallet = this.changeWallet.bind(this);\n    this.updateActiveHash = this.updateActiveHash.bind(this);\n  }\n\n  hashUsed(hashUsed) {\n    this.props.callback(hashUsed);\n  }\n\n  changeWallet(event, data) {\n    // - 1 Due list starts in 1\n    let user = this.props.users[data.value - 1];\n    let walletList = user.walletList;\n    let enableSecond = user.walletList.length > 1 ? true : false;\n    console.log(\"enable second: \" + enableSecond); // console.log(\"WalletList: \")\n    //When change a user selection,\n    //have to update hashSelected\n    //If user just have 1 wallet it's so easy\n\n    if (!enableSecond) {\n      this.setState({\n        walletHash: walletList[0].hash\n      });\n      console.log(\"valor de hash: \" + walletList[0].hash);\n    } //Updating value state...\n\n\n    this.setState(state => ({\n      activeValue: walletList.map(u => {\n        return {\n          key: u.hash,\n          value: u.hash,\n          text: \"Wallet: \" + u.hash\n        };\n      }),\n      secondSelect: enableSecond\n    }));\n  }\n\n  updateActiveHash(event, data) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Select, {\n      placeholder: \"Choose and User ID\",\n      onChange: this.changeWallet,\n      options: this.props.users.map(u => {\n        return {\n          key: u.id,\n          value: u.id,\n          text: u.id + \" \" + u.name\n        };\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.state.secondSelect ? React.createElement(Select, {\n      placeholder: \"Select a Wallet\",\n      options: this.state.activeValue,\n      onChange: this.updateActiveHash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default UserSelector;","map":{"version":3,"sources":["/home/zapi/pruebaReact/bankview/src/UserSelector.js"],"names":["React","Component","Select","UserSelector","constructor","props","state","changeWallet","bind","updateActiveHash","hashUsed","callback","event","data","user","users","value","walletList","enableSecond","length","console","log","setState","walletHash","hash","activeValue","map","u","key","text","secondSelect","render","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAsB,mBAAtB;;AAGA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GACA,EADA;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDE,EAAAA,QAAQ,CAACA,QAAD,EAAU;AACd,SAAKL,KAAL,CAAWM,QAAX,CAAoBD,QAApB;AACH;;AAGHH,EAAAA,YAAY,CAACK,KAAD,EAAQC,IAAR,EAAc;AAEtB;AACA,QAAIC,IAAI,GAAG,KAAKT,KAAL,CAAWU,KAAX,CAAiBF,IAAI,CAACG,KAAL,GAAa,CAA9B,CAAX;AACA,QAAIC,UAAU,GAAGH,IAAI,CAACG,UAAtB;AAEA,QAAIC,YAAY,GAAGJ,IAAI,CAACG,UAAL,CAAgBE,MAAhB,GAAyB,CAAzB,GAA4B,IAA5B,GAAmC,KAAtD;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBH,YAAhC,EARsB,CAStB;AAEA;AACA;AACA;;AACA,QAAI,CAACA,YAAL,EACA;AACI,WAAKI,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAGN,UAAU,CAAC,CAAD,CAAV,CAAcO;AAA5B,OAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,UAAU,CAAC,CAAD,CAAV,CAAcO,IAA9C;AACH,KAlBqB,CAoBtB;;;AACA,SAAKF,QAAL,CAAchB,KAAK,KAAI;AACnBmB,MAAAA,WAAW,EAAGR,UAAU,CAACS,GAAX,CAAeC,CAAC,IAAG;AAAC,eAC9B;AAACC,UAAAA,GAAG,EAAED,CAAC,CAACH,IAAR;AAAeR,UAAAA,KAAK,EAAGW,CAAC,CAACH,IAAzB;AAAgCK,UAAAA,IAAI,EAAE,aAAaF,CAAC,CAACH;AAArD,SAD8B;AAEhC,OAFY,CADK;AAInBM,MAAAA,YAAY,EAAGZ;AAJI,KAAJ,CAAnB;AAOH;;AAGDT,EAAAA,gBAAgB,CAACG,KAAD,EAAQC,IAAR,EAAa,CAE5B;;AAEDkB,EAAAA,MAAM,GAAE;AACJ,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,oBAApB;AACA,MAAA,QAAQ,EAAE,KAAKxB,YADf;AAEA,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWU,KAAX,CAAiBW,GAAjB,CAAqBC,CAAC,IAAI;AAAC,eAAQ;AAACC,UAAAA,GAAG,EAACD,CAAC,CAACK,EAAP;AAAWhB,UAAAA,KAAK,EAAGW,CAAC,CAACK,EAArB;AAAyBH,UAAAA,IAAI,EAACF,CAAC,CAACK,EAAF,GAAO,GAAP,GAAaL,CAAC,CAACM;AAA7C,SAAR;AAA4D,OAAvF,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKC,KAAK3B,KAAL,CAAWwB,YAAX,GACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,iBAApB;AACA,MAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWmB,WADpB;AAEA,MAAA,QAAQ,EAAE,KAAKhB,gBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAIG,IATJ,CADA;AAcH;;AAnEgC;;AAsErC,eAAeN,YAAf","sourcesContent":["import React, { Component} from 'react';\nimport { Select} from 'semantic-ui-react';\n\n\nclass UserSelector extends Component {\n    \n    constructor(props) {\n        super(props);\n    \n        this.state = \n        {};\n\n        this.changeWallet = this.changeWallet.bind(this);\n        this.updateActiveHash = this.updateActiveHash.bind(this);\n      }\n\n      hashUsed(hashUsed){\n          this.props.callback(hashUsed)\n      }\n\n\n    changeWallet(event, data) {\n\n        // - 1 Due list starts in 1\n        let user = this.props.users[data.value - 1];\n        let walletList = user.walletList;\n\n        let enableSecond = user.walletList.length > 1? true : false;\n\n        console.log(\"enable second: \" + enableSecond )\n        // console.log(\"WalletList: \")\n\n        //When change a user selection,\n        //have to update hashSelected\n        //If user just have 1 wallet it's so easy\n        if (!enableSecond)\n        {\n            this.setState({walletHash : walletList[0].hash})\n            console.log(\"valor de hash: \" + walletList[0].hash)\n        }\n\n        //Updating value state...\n        this.setState(state =>({\n            activeValue : walletList.map(u=> {return(\n                {key :u.hash , value : u.hash , text: \"Wallet: \" + u.hash }\n            )}),\n            secondSelect : enableSecond,\n        }))\n        \n    }\n\n\n    updateActiveHash(event, data){\n\n    }\n\n    render(){\n        return (\n        <div>\n          <Select placeholder='Choose and User ID' \n          onChange={this.changeWallet}\n          options={this.props.users.map(u => {return ({key:u.id, value : u.id, text:u.id + \" \" + u.name})})}/>\n\n        {this.state.secondSelect? \n           <Select placeholder='Select a Wallet' \n           options={this.state.activeValue}\n           onChange={this.updateActiveHash}/>\n          : null }\n\n        </div>\n        )\n    }\n    \n}\nexport default UserSelector;"]},"metadata":{},"sourceType":"module"}