{"ast":null,"code":"var _jsxFileName = \"/home/zapi/pruebaReact/bankview/src/Transactor.js\";\nimport React, { Component } from 'react';\nimport UserSelector from './UserSelector';\nimport { Input, Button, Label, Message } from 'semantic-ui-react';\n\nclass Transactor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fromHash: 0,\n      toHash: 0\n    }; //I think this is not neccessary...\n\n    this.checkAndTransact = this.checkAndTransact.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n  }\n\n  updateFromHashSelected(fromHash) {\n    console.log(\"Hash FROM :\" + fromHash);\n    this.setState(state => ({\n      fromHash: fromHash\n    }));\n  }\n\n  updateToHashSelected(toHash) {\n    console.log(\"Hash TO :\" + toHash);\n    this.setState(state => ({\n      toHash: toHash\n    }));\n  }\n\n  checkAndTransact(event, data) {\n    //Here is where magic happens\n    axios.post('`http://localhost:8080/users`', {\n      firstName: 'Fred',\n      lastName: 'Flintstone'\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  updateInputValue(event, data) {\n    this.setState({\n      inputValue: data.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"transaction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Make a Transaction\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Select 2 users to make a wallet transaction\")), React.createElement(UserSelector, {\n      users: this.props.users,\n      callback: this.updateFromHashSelected.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(UserSelector, {\n      users: this.props.users,\n      callback: this.updateToHashSelected.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Select Budget\"), React.createElement(Input, {\n      placeholder: \"Money...\",\n      onChange: this.updateInputValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: \"Transact!\",\n      onClick: this.checkAndTransact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Transactor;","map":{"version":3,"sources":["/home/zapi/pruebaReact/bankview/src/Transactor.js"],"names":["React","Component","UserSelector","Input","Button","Label","Message","Transactor","constructor","props","state","fromHash","toHash","checkAndTransact","bind","updateInputValue","updateFromHashSelected","console","log","setState","updateToHashSelected","event","data","axios","post","firstName","lastName","then","response","catch","error","inputValue","value","render","users"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport UserSelector from './UserSelector'\nimport { Input, Button, Label, Message } from 'semantic-ui-react'\n\n\nclass Transactor extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = \n        {\n            fromHash : 0,\n            toHash  : 0\n        }\n\n        //I think this is not neccessary...\n        this.checkAndTransact = this.checkAndTransact.bind(this);\n\n        this.updateInputValue = this.updateInputValue.bind(this);\n    }\n\n    updateFromHashSelected(fromHash)\n    {\n        console.log(\"Hash FROM :\" + fromHash)\n        this.setState(state =>({\n            fromHash : fromHash,\n        }))\n    }\n\n    updateToHashSelected(toHash)\n    {\n        console.log(\"Hash TO :\" + toHash)\n        this.setState(state =>({\n            toHash : toHash,\n        }))\n    }\n\n    checkAndTransact(event, data){\n\n        //Here is where magic happens\n        \n        axios.post('`http://localhost:8080/users`', {\n            firstName: 'Fred',\n            lastName: 'Flintstone'\n          })\n          .then(function (response) {\n            console.log(response);\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n\n    updateInputValue(event, data){\n        this.setState({inputValue : data.value});\n    }\n\n    render() {\n        return (\n        <div id='transaction'>\n            <Message>\n            <Message.Header>Make a Transaction</Message.Header>\n            <p>\n              Select 2 users to make a wallet transaction\n            </p>\n            </Message>\n            <UserSelector \n                users={this.props.users}\n                callback={this.updateFromHashSelected.bind(this)} />\n            <UserSelector \n                users={this.props.users} \n                callback={this.updateToHashSelected.bind(this)}/>\n            \n            <Label >Select Budget</Label>\n            <Input placeholder='Money...'\n                    onChange={this.updateInputValue} />\n            <Button\n                content='Transact!'\n                onClick={this.checkAndTransact}\n                 />\n        </div>\n        )\n    }\n}\nexport default Transactor;"]},"metadata":{},"sourceType":"module"}