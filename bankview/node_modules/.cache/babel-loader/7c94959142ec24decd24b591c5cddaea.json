{"ast":null,"code":"var _jsxFileName = \"/home/zapi/pruebaReact/bankview/src/App.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport UserList from './UserList';\nimport UserForm from './UserForm';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.userAction = async () => {\n      const response = await fetch('http://localhost:8080/users');\n      const myJson = await response.json(); //extract JSON from the http response\n      // do something with myJson\n\n      console.log(myJson);\n    };\n\n    this.state = {\n      users: [{\n        id: 1,\n        name: \"miguel\",\n        email: \"test@miguelgomez.io\"\n      }, {\n        id: 2,\n        name: \"test\",\n        email: \"test@test.es\"\n      }]\n    };\n  }\n\n  handleOnAddUser(event) {\n    event.preventDefualt();\n    let user = {\n      name: event.target.name.value,\n      email: event.target.email.value\n    };\n    this.setState({\n      users: this.state.users.concat([user])\n    });\n    console.log(\"users: \", this.state.users);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(UserList, {\n      users: this.state.users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(UserForm, {\n      onAddUser: this.handleOnAddUser.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zapi/pruebaReact/bankview/src/App.js"],"names":["React","Component","UserList","UserForm","App","constructor","userAction","response","fetch","myJson","json","console","log","state","users","id","name","email","handleOnAddUser","event","preventDefualt","user","target","value","setState","concat","render","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAEzBI,EAAAA,WAAW,GAAE;AACX;;AADW,SAWbC,UAXa,GAWA,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAFuB,CAEe;AACtC;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAaH,MAAb;AACC,KAhBU;;AAEX,SAAKI,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACL;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,QAAd;AAAwBC,QAAAA,KAAK,EAAE;AAA/B,OADK,EAEL;AAACF,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE,MAAd;AAAsBC,QAAAA,KAAK,EAAE;AAA7B,OAFK;AADI,KAAb;AAOD;;AAUDC,EAAAA,eAAe,CAAEC,KAAF,EAAS;AACtBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG;AACTL,MAAAA,IAAI,EAAEG,KAAK,CAACG,MAAN,CAAaN,IAAb,CAAkBO,KADf;AAETN,MAAAA,KAAK,EAAEE,KAAK,CAACG,MAAN,CAAaL,KAAb,CAAmBM;AAFjB,KAAX;AAIA,SAAKC,QAAL,CAAc;AACZV,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBW,MAAjB,CAAwB,CAACJ,IAAD,CAAxB;AADK,KAAd;AAGAV,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKC,KAAL,CAAWC,KAAlC;AAED;;AAEDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAE,KAAKI,eAAL,CAAqBS,IAArB,CAA0B,IAA1B,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAzCwB;;AA4C3B,eAAevB,GAAf","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\nimport UserList from './UserList';\nimport UserForm from './UserForm';\n\nclass App extends Component{\n  \n  constructor(){\n    super();\n    this.state = {\n      users: [\n        {id: 1, name: \"miguel\", email: \"test@miguelgomez.io\"},\n        {id: 2, name: \"test\", email: \"test@test.es\"}\n      ]\n      \n    };\n  }\n  \n  userAction = async () => {\n    const response = await fetch('http://localhost:8080/users');\n    const myJson = await response.json(); //extract JSON from the http response\n    // do something with myJson\n    console.log (myJson);\n    }\n\n\n  handleOnAddUser (event) {\n    event.preventDefualt();\n    let user = {\n      name: event.target.name.value,\n      email: event.target.email.value\n    }\n    this.setState({\n      users: this.state.users.concat([user])\n    })\n    console.log(\"users: \", this.state.users);\n\n  }\n\n  render() {\n    return (\n      <div>\n        <UserList users={this.state.users} />\n        <UserForm onAddUser={this.handleOnAddUser.bind(this)} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}