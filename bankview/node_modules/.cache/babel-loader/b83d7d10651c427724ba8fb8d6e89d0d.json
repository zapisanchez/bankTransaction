{"ast":null,"code":"var _jsxFileName = \"/home/zapi/pruebaReact/bankview/src/Transactor.js\";\nimport React, { Component } from 'react';\nimport UserSelector from './UserSelector';\nimport { Input, Button, Label, Message } from 'semantic-ui-react';\nimport axios from 'axios';\n\nclass Transactor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fromHash: 0,\n      toHash: 0\n    };\n    this.checkAndTransact = this.checkAndTransact.bind(this);\n    this.updateInputValue = this.updateInputValue.bind(this);\n    this.doGetPetition = this.doGetPetition.bind(this);\n  }\n\n  doGetPetition() {\n    this.props.onPutDone();\n  }\n\n  updateFromHashSelected(fromHash) {\n    console.log(\"Hash FROM :\" + fromHash);\n    this.setState(state => ({\n      fromHash: fromHash\n    }));\n  }\n\n  updateToHashSelected(toHash) {\n    console.log(\"Hash TO :\" + toHash);\n    this.setState(state => ({\n      toHash: toHash\n    }));\n  }\n\n  checkAndTransact(event, data) {\n    //Here is where magic happens\n    //Best hack 4ever \n    //https://stackoverflow.com/questions/34930771/why-is-this-undefined-inside-class-method-when-using-promises\n    let that = this; // Send a POST request\n\n    axios({\n      method: 'post',\n      url: `http://localhost:8080/move`,\n      data: {\n        from: parseInt(this.state.fromHash),\n        to: parseInt(this.state.toHash),\n        amount: parseFloat(this.state.inputValue)\n      },\n      params: {\n        from: parseInt(this.state.fromHash),\n        to: parseInt(this.state.toHash),\n        amount: parseFloat(this.state.inputValue)\n      }\n    }).then(function (response) {\n      console.log(response);\n\n      if (response.status === 200) {\n        //transactions correctly applied\n        //Calling callback\n        that.doGetPetition();\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  updateInputValue(event, data) {\n    this.setState({\n      inputValue: data.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"transaction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Make a Transaction\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Select 2 users to make a wallet transaction\")), React.createElement(UserSelector, {\n      users: this.props.users,\n      callback: this.updateFromHashSelected.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(UserSelector, {\n      users: this.props.users,\n      callback: this.updateToHashSelected.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Select Budget\"), React.createElement(Input, {\n      placeholder: \"Money...\",\n      onChange: this.updateInputValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: \"Transact!\",\n      onClick: this.checkAndTransact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Transactor;","map":{"version":3,"sources":["/home/zapi/pruebaReact/bankview/src/Transactor.js"],"names":["React","Component","UserSelector","Input","Button","Label","Message","axios","Transactor","constructor","props","state","fromHash","toHash","checkAndTransact","bind","updateInputValue","doGetPetition","onPutDone","updateFromHashSelected","console","log","setState","updateToHashSelected","event","data","that","method","url","from","parseInt","to","amount","parseFloat","inputValue","params","then","response","status","catch","error","value","render","users"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport UserSelector from './UserSelector'\nimport { Input, Button, Label, Message } from 'semantic-ui-react'\nimport axios from 'axios';\n\nclass Transactor extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = \n        {\n            fromHash : 0,\n            toHash  : 0\n        }\n\n        this.checkAndTransact = this.checkAndTransact.bind(this);\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.doGetPetition = this.doGetPetition.bind(this);\n    }\n\n    doGetPetition(){\n        this.props.onPutDone();\n    }\n\n\n    updateFromHashSelected(fromHash)\n    {\n        console.log(\"Hash FROM :\" + fromHash)\n        this.setState(state =>({\n            fromHash : fromHash,\n        }))\n    }\n\n    updateToHashSelected(toHash)\n    {\n        console.log(\"Hash TO :\" + toHash)\n        this.setState(state =>({\n            toHash : toHash,\n        }))\n    }\n\n    checkAndTransact(event, data){\n\n        //Here is where magic happens\n        //Best hack 4ever \n        //https://stackoverflow.com/questions/34930771/why-is-this-undefined-inside-class-method-when-using-promises\n        let that = this;\n        // Send a POST request\n        axios({\n            method: 'post',\n            url: `http://localhost:8080/move`,\n            data: {\n            from: parseInt(this.state.fromHash),\n            to: parseInt(this.state.toHash),\n            amount: parseFloat(this.state.inputValue)\n        },\n        params : \n            {from: parseInt(this.state.fromHash),\n            to: parseInt(this.state.toHash),\n            amount: parseFloat(this.state.inputValue)}\n        })\n        .then(function (response) {\n            console.log(response);\n\n            if (response.status === 200){\n                //transactions correctly applied\n                //Calling callback\n                that.doGetPetition();\n                \n            }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n     }\n\n    updateInputValue(event, data){\n        this.setState({inputValue : data.value});\n    }\n\n    render() {\n        return (\n        <div id='transaction'>\n            <Message>\n            <Message.Header>Make a Transaction</Message.Header>\n            <p>\n              Select 2 users to make a wallet transaction\n            </p>\n            </Message>\n            <UserSelector \n                users={this.props.users}\n                callback={this.updateFromHashSelected.bind(this)} />\n            <UserSelector \n                users={this.props.users} \n                callback={this.updateToHashSelected.bind(this)}/>\n            \n            <Label >Select Budget</Label>\n            <Input placeholder='Money...'\n                    onChange={this.updateInputValue} />\n            <Button\n                content='Transact!'\n                onClick={this.checkAndTransact}\n                 />\n        </div>\n        )\n    }\n}\nexport default Transactor;"]},"metadata":{},"sourceType":"module"}