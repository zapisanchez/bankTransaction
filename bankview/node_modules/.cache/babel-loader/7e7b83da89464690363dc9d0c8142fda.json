{"ast":null,"code":"var _jsxFileName = \"/home/zapi/pruebaReact/bankview/src/App.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css'; //import UserList from './UserList';\n//import UserForm from './UserForm';\n\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8080/users`).then(res => {\n      const persons = res.data;\n      console.log(\"Zapi:\" + JSON.stringify(persons));\n      this.setState({\n        persons\n      });\n    });\n  }\n\n  renderTableData() {\n    return this.state.persons.map((person, index) => {\n      var _walletList$, _walletList$2;\n\n      const id = person.id,\n            name = person.name,\n            lastName = person.lastName,\n            walletList = person.walletList; //destructuring\n      //console.log(\"EO: \" + walletList[0].hash)\n      //<td>{walletList && walletList[0] && walletList[0].hash}</td>\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, lastName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, walletList === null || walletList === void 0 ? void 0 : (_walletList$ = walletList[0]) === null || _walletList$ === void 0 ? void 0 : _walletList$.hash), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, walletList === null || walletList === void 0 ? void 0 : (_walletList$2 = walletList[0]) === null || _walletList$2 === void 0 ? void 0 : _walletList$2.balance));\n    });\n  }\n\n  renderTableHeader() {\n    if (this.state.persons && this.state.persons[0]) {\n      let header = Object.keys(this.state.persons && this.state.persons[0]);\n      console.log(\"the header: \" + header); //as known as \"the ñapa...\"\n\n      header[header.indexOf('walletList')] = 'wallet';\n      return header.map((key, index) => {\n        return React.createElement(\"th\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, key.toUpperCase());\n      });\n    }\n  }\n\n  render() {\n    console.log('I was triggered during render');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"React Dynamic Table\"), React.createElement(\"table\", {\n      id: \"persons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.renderTableHeader()), this.renderTableData())));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zapi/pruebaReact/bankview/src/App.js"],"names":["React","Component","axios","App","state","persons","componentDidMount","get","then","res","data","console","log","JSON","stringify","setState","renderTableData","map","person","index","id","name","lastName","walletList","hash","balance","renderTableHeader","header","Object","keys","indexOf","key","toUpperCase","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n//import UserList from './UserList';\n//import UserForm from './UserForm';\n\nimport axios from 'axios';\n\nclass App extends Component{\n  \n//   constructor(){\n//     super();\n//     this.state = {\n//       users: [\n//         {id: 1, name: \"miguel\", email: \"test@miguelgomez.io\"},\n//         {id: 2, name: \"test\", email: \"test@test.es\"}\n//       ]\n      \n//     };\n//   }\n  \n//   // userAction = async () => {\n//   //   const response = await fetch('http://localhost:8080/users');\n//   //   const myJson = await response.json(); //extract JSON from the http response\n//   //   // do something with myJson\n//   //   console.log (myJson);\n//   //   }\n\n\n//   handleOnAddUser (event) {\n//     event.preventDefualt();\n//     let user = {\n//       name: event.target.name.value,\n//       email: event.target.email.value\n//     }\n//     this.setState({\n//       users: this.state.users.concat([user])\n//     })\n//     console.log(\"users: \", this.state.users);\n\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <UserList users={this.state.users} />\n//         <UserForm onAddUser={this.handleOnAddUser.bind(this)} />\n//       </div>\n//     );\n//   }\n// }\n  state = {\n    persons: []\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8080/users`)\n      .then(res => {\n        const persons = res.data;\n        console.log(\"Zapi:\" + JSON.stringify(persons))\n        this.setState({ persons });\n      })\n  }\n\n\n\n\n\n  renderTableData() {\n    return this.state.persons.map((person, index) => {\n       const { id, name,lastName, walletList } = person //destructuring\n       //console.log(\"EO: \" + walletList[0].hash)\n\n       \n       //<td>{walletList && walletList[0] && walletList[0].hash}</td>\n       return (\n          <tr key={id}>\n             <td>{id}</td>\n             <td>{name}</td>\n             <td>{lastName}</td>\n             <td>{walletList?.[0]?.hash}</td>\n             <td>{walletList?.[0]?.balance}</td>\n          </tr>\n       )\n    })\n }\n\n renderTableHeader() {\n   if(this.state.persons && this.state.persons[0]){\n  \n    let header = Object.keys(this.state.persons && this.state.persons[0]);\n    console.log (\"the header: \" + header)\n    \n    //as known as \"the ñapa...\"\n    header[header.indexOf('walletList')] = 'wallet';\n\n  return header.map((key, index) => {\n     return <th key={index}>{key.toUpperCase()}</th>\n  })\n}\n}\n\n\n  render() {\n    console.log('I was triggered during render')\n    return (\n      <div>\n        <h1 id='title'>React Dynamic Table</h1>\n      <table id='persons'>\n       <tbody>\n          <tr>{this.renderTableHeader()}</tr>\n          {this.renderTableData()}\n       </tbody>\n    </table>\n </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}